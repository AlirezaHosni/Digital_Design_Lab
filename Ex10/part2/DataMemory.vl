`default_nettype none
`timescale 1ns/10ps

module DataMemory  (clk, read_data_2, mem_read, mem_write, E, alu_result, data_memory_out); 

input clk;
input mem_read;
input mem_write;
input E; 
input [63:0]read_data_2;
input wire  [63:0]alu_result;
output reg [63:0]data_memory_out;

reg [0:63] mem [0:63] ;


// Memory Write Block 
always @ (posedge clk, mem_write, E, alu_result, read_data_2)
begin
   if ( E && mem_write )
    begin
       mem[alu_result] = read_data_2;
   end
end

// Memory Read Block 
always @ (posedge clk, mem_read, E, alu_result, read_data_2)
begin
  if (!mem_read && E) begin
    data_memory_out = mem[alu_result];
  end 
end

endmodule
