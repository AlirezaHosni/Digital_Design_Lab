`default_nettype none
`timescale 1ns/10ps

module instructionMemory (ins_in, E, ins_address, ins_out); 

// input write_read_im;
input E; 
input [63:0]ins_in;
input wire  [4:0]ins_address;
output reg [63:0]ins_out;

reg [0:63] mem [31:0] ;


// Memory Write Block 
// always @ (posedge clk, write_read_im, E, ins_address, ins_in)
// begin
//    if ( E && write_read_im )
//     begin
//        mem[ins_address] = ins_in;
//    end
// end

// Memory Read Block 
always
begin
  if ( E) begin
    ins_out = mem[ins_address];
  end 
end

endmodule
