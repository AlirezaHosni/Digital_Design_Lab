`default_nettype none
`timescale 1ns/10ps

`include "mux2_64bit.vl"

module mux2_64bit_tb;
reg  s;
reg [63:0] w0 = 10;
reg [63:0] w1 = 20;
wire reg [63:0] f;

localparam period = 20;
integer i = 0;
integer j = 0;

mux2to1 multiplexer (w0, w1, s, f);

reg clk;

always 
begin
    clk = 1'b0;
    #20;

    clk = 1'b1;
    #20;
end

always @(posedge clk )
    begin
     s = 0;
     #period;
    
    for ( i=0 ; i<64; i++)  
    begin
        if (w0[i]  != f[i])
        begin
           $display("test failed w0 and f must be equal !!!  w0[%d] = %b  f[%d] = %b",i,w0[i], f[i]);  
        end
        
    end
    

    s = 1;
     #period;
         
        for ( j=0 ; j<64; j++)  
    begin
        if (w1[j]  != f[j])
        begin
           $display("test failed w1 and f must be equal !!!  w1[%d] = %b  f[%d] = %b",j,w1[j], f[j]);  
        end    
    end


    $finish;
     end

     always
begin
    $dumpfile("mux2_64bit.vcd");
    $dumpvars(0, mux2_64bit_tb);
    #300;
    $finish;
end

endmodule
