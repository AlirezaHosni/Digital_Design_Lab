`default_nettype none
`timescale 1ns/10ps

module DataMemory  (clk, data_in, write_read, E, address, data_out); 

input clk;
input write_read;
input E; 
input [63:0]data_in;
input wire  [5:0]address;
output reg [63:0]data_out;

reg [0:63] mem [0:63] ;


// Memory Write Block 
always @ (posedge clk, write_read, E, address, data_in)
begin
   if ( E && write_read )
    begin
       mem[address] = data_in;
   end
end

// Memory Read Block 
always @ (posedge clk, write_read, E, address, data_in)
begin
  if (!write_read && E) begin
    data_out = mem[address];
  end 
end

endmodule
